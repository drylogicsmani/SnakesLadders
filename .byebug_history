exit
game.token_at(p3x3)
exit
c
exit
c
exit
position
exit
position
exit
dice.roll
val
exit
dice
outcome
dice.stub(:roll).and_return(1)
dice.stub(:roll)
dice
val
exit
current_position << token
current_position = Position.new(0,0)
(outcome == 1) && (check_token(token))
 if (outcome == 1) && (check_token(token))
exit
@board[current.x][current.y] << token
token
@board[current.x][current.y]
exit
@board[current.x][current.y]
@board[current.x][current.y] = token
token
@board[current.x][current.y]
exit
current
n
current_position
token
outcome
exit
current
n
current
current_position
outcome
token
exit
game.move(p0x2,2,:X)
token
n
current_position
token
exit
current
exit
dice
current
current_position
exit
current_position
exit
current_position
exit
position
dice
current_position
exit
dice
current_position
c
position
c
dice
exit
token_at(token).delete_if{|t| t == token}
n
token
current_position
n
dice
exit
position
